@using System.Collections
@using System.Globalization
@using Romontinka.Server.WebSite.Metadata
@using Romontinka.Server.WebSite.Models.Controls
@{
    Layout = "Template.Master.cshtml";
    var classes = string.Empty;
    if (ViewData.ModelMetadata.AdditionalValues.ContainsKey(EditorHtmlClassAttribute.ClassNamesKey))
    {
        classes = (string)ViewData.ModelMetadata.AdditionalValues[EditorHtmlClassAttribute.ClassNamesKey];
    } //if

    AjaxCheckBoxListModel model = null;

    if (ViewData.ModelMetadata.AdditionalValues.ContainsKey(AjaxCheckBoxListAttribute.AjaxCheckBoxListKey))
    {
        model = (AjaxCheckBoxListModel)ViewData.ModelMetadata.AdditionalValues[AjaxCheckBoxListAttribute.AjaxCheckBoxListKey];
    } //if

    if (model == null)
    {
        model = new AjaxCheckBoxListModel();
    } //if

    model.Property = ViewData.ModelMetadata.PropertyName;
    model.EditorClasses = classes;
    model.IsRequired = ViewData.ModelMetadata.IsRequired;

    var attrs = Html.GetUnobtrusiveValidationAttributes(ViewData.ModelMetadata.PropertyName, ViewData.ModelMetadata);
    if (model.HtmlAttributes == null)
    {
        model.HtmlAttributes = attrs;
    } //if
    else
    {
        foreach (var attr in attrs)
        {
            model.HtmlAttributes[attr.Key] = attr.Value;
        } //foreach
    } //else
}
@if (ViewData.ModelMetadata.Model != null)
{
    var array = ViewData.ModelMetadata.Model as IEnumerable ;
    if (array!=null)
    {
        var list = new List<string>();

        foreach (var obj in array)
        {
            list.Add(String.Format(CultureInfo.InvariantCulture, "{0}", obj));
        }
        
        model.Values = list.ToArray();
    } //if  
}
    
@Html.AjaxCheckBoxList(model)